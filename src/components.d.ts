/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import '@stencil/core';




export namespace Components {

  interface RadicalItemSliding {
    /**
    * Close the sliding item. Items can also be closed from the [List](../../list/List).
    */
    'close': () => Promise<void>;
    /**
    * Close all of the sliding items in the list. Items can also be closed from the [List](../../list/List).
    */
    'closeOpened': () => Promise<boolean>;
    /**
    * If `true`, the user cannot interact with the sliding-item.
    */
    'disabled': boolean;
    /**
    * Get the amount the item is open in pixels.
    */
    'getOpenAmount': () => Promise<number>;
    /**
    * Get the ratio of the open amount of the item compared to the width of the options. If the number returned is positive, then the options on the right side are open. If the number returned is negative, then the options on the left side are open. If the absolute value of the number is greater than 1, the item is open more than the width of the options.
    */
    'getSlidingRatio': () => Promise<number>;
  }
  interface RadicalItemSlidingAttributes extends StencilHTMLAttributes {
    /**
    * If `true`, the user cannot interact with the sliding-item.
    */
    'disabled'?: boolean;
    /**
    * Emitted when the sliding position changes.
    */
    'onIonDrag'?: (event: CustomEvent) => void;
  }
}

declare global {
  interface StencilElementInterfaces {
    'RadicalItemSliding': Components.RadicalItemSliding;
  }

  interface StencilIntrinsicElements {
    'radical-item-sliding': Components.RadicalItemSlidingAttributes;
  }


  interface HTMLRadicalItemSlidingElement extends Components.RadicalItemSliding, HTMLStencilElement {}
  var HTMLRadicalItemSlidingElement: {
    prototype: HTMLRadicalItemSlidingElement;
    new (): HTMLRadicalItemSlidingElement;
  };

  interface HTMLElementTagNameMap {
    'radical-item-sliding': HTMLRadicalItemSlidingElement
  }

  interface ElementTagNameMap {
    'radical-item-sliding': HTMLRadicalItemSlidingElement;
  }


  export namespace JSX {
    export interface Element {}
    export interface IntrinsicElements extends StencilIntrinsicElements {
      [tagName: string]: any;
    }
  }
  export interface HTMLAttributes extends StencilHTMLAttributes {}

}
